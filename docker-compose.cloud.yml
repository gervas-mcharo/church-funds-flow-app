# Cloud Supabase Mode - Frontend only with external Supabase
# Use this when you want to use cloud Supabase for backend services

version: '3.8'

services:
  # Simple Traefik for frontend-only deployment
  traefik:
    image: traefik:v3.0
    container_name: traefik-cloud
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.cloud.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/logs:/var/log/traefik
    networks:
      - web
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Optional local PostgreSQL for development data only
  postgres-dev:
    image: postgres:15-alpine
    container_name: postgres-dev-cloud
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dev_data}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - internal
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend Application (Development Mode with Cloud Supabase)
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
    container_name: frontend-cloud
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_SUPABASE_MODE=cloud
      - VITE_SUPABASE_CLOUD_URL=${SUPABASE_CLOUD_URL}
      - VITE_SUPABASE_CLOUD_ANON_KEY=${SUPABASE_CLOUD_ANON_KEY}
      # Backwards compatibility
      - VITE_SUPABASE_URL=${SUPABASE_CLOUD_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_CLOUD_ANON_KEY}
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-cloud.rule=Host(`localhost`)"
      - "traefik.http.services.frontend-cloud.loadbalancer.server.port=3000"

networks:
  web:
    external: false
  internal:
    external: false

volumes:
  postgres_dev_data: