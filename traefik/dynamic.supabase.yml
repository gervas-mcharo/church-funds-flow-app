# Enhanced dynamic Traefik configuration for Supabase services
# This file provides additional routing rules and middleware configurations

http:
  middlewares:
    # Development-specific security headers (more permissive than production)
    dev-security-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "http"
        customResponseHeaders:
          X-Robots-Tag: "noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
          Server: ""
          X-Development: "true"
        referrerPolicy: "strict-origin-when-cross-origin"
        hostsProxyHeaders:
          - "X-Forwarded-Host"
          - "X-Forwarded-Proto"
          - "X-Real-IP"
        customFrameOptionsValue: "SAMEORIGIN"
        contentTypeNosniff: true
        browserXssFilter: true
        isDevelopment: true

    # Advanced rate limiting for different endpoints
    rate-limit-strict:
      rateLimit:
        average: 10
        burst: 20
        period: 1m

    rate-limit-moderate:
      rateLimit:
        average: 50
        burst: 100
        period: 1m

    rate-limit-generous:
      rateLimit:
        average: 200
        burst: 400
        period: 1m

    # Request size limits for different services
    small-payload:
      buffering:
        maxRequestBodyBytes: 1048576  # 1MB
        maxResponseBodyBytes: 1048576  # 1MB

    large-payload:
      buffering:
        maxRequestBodyBytes: 104857600  # 100MB
        maxResponseBodyBytes: 104857600  # 100MB

    # Timeout configurations
    fast-timeout:
      forwardAuth:
        trustForwardHeader: true
      retry:
        attempts: 2

    slow-timeout:
      forwardAuth:
        trustForwardHeader: true
      retry:
        attempts: 3

    # API-specific CORS with authentication headers
    cors-api-enhanced:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
        accessControlAllowHeaders:
          - authorization
          - x-client-info
          - apikey
          - content-type
          - cache-control
          - x-requested-with
          - accept
          - accept-encoding
          - accept-language
          - connection
          - dnt
          - host
          - origin
          - pragma
          - referer
          - user-agent
          - x-forwarded-for
          - x-forwarded-host
          - x-forwarded-proto
          - range
          - prefer
        accessControlAllowOriginListRegex:
          - "^http://localhost(:[0-9]+)?$"
          - "^http://127\\.0\\.0\\.1(:[0-9]+)?$"
          - "^http://.*\\.localhost$"
        accessControlAllowCredentials: true
        accessControlExposeHeaders:
          - content-length
          - content-range
          - content-type
        accessControlMaxAge: 86400
        addVaryHeader: true

    # Auth-specific CORS for login/signup flows
    cors-auth-enhanced:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
          - HEAD
        accessControlAllowHeaders:
          - authorization
          - x-client-info
          - apikey
          - content-type
          - cache-control
          - x-requested-with
          - accept
          - origin
          - user-agent
          - referer
        accessControlAllowOriginListRegex:
          - "^http://localhost(:[0-9]+)?$"
          - "^http://127\\.0\\.0\\.1(:[0-9]+)?$"
          - "^http://.*\\.localhost$"
        accessControlAllowCredentials: true
        accessControlExposeHeaders:
          - set-cookie
          - authorization
        accessControlMaxAge: 86400
        addVaryHeader: true

    # Storage-specific CORS for file operations
    cors-storage-enhanced:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
          - HEAD
        accessControlAllowHeaders:
          - authorization
          - x-client-info
          - apikey
          - content-type
          - cache-control
          - x-requested-with
          - accept
          - origin
          - range
          - if-match
          - if-none-match
          - if-modified-since
          - if-unmodified-since
        accessControlAllowOriginListRegex:
          - "^http://localhost(:[0-9]+)?$"
          - "^http://127\\.0\\.0\\.1(:[0-9]+)?$"
          - "^http://.*\\.localhost$"
        accessControlAllowCredentials: true
        accessControlExposeHeaders:
          - content-length
          - content-range
          - content-type
          - etag
          - last-modified
          - accept-ranges
        accessControlMaxAge: 86400
        addVaryHeader: true

  # Additional routing rules for specific API patterns
  routers:
    # Health check endpoints (bypass rate limiting)
    health-check-router:
      rule: "Host(`api.localhost`) && Path(`/health`)"
      service: "supabase-api"
      middlewares:
        - "cors-api-enhanced"
        - "dev-security-headers"
        - "compression"
      priority: 100

    # Auth health check
    auth-health-router:
      rule: "Host(`auth.localhost`) && Path(`/health`)"
      service: "supabase-auth"
      middlewares:
        - "cors-auth-enhanced"
        - "dev-security-headers"
        - "compression"
      priority: 100

    # File upload endpoints (special handling for large files)
    storage-upload-router:
      rule: "Host(`storage.localhost`) && Method(`POST`, `PUT`)"
      service: "supabase-storage"
      middlewares:
        - "cors-storage-enhanced"
        - "dev-security-headers"
        - "large-payload"
        - "slow-timeout"
        - "rate-limit-moderate"
      priority: 90

    # File download endpoints
    storage-download-router:
      rule: "Host(`storage.localhost`) && Method(`GET`, `HEAD`)"
      service: "supabase-storage"
      middlewares:
        - "cors-storage-enhanced"
        - "dev-security-headers"
        - "compression"
        - "fast-timeout"
        - "rate-limit-generous"
      priority: 80

# TLS Configuration (disabled for local development)
tls:
  options:
    default:
      minVersion: "VersionTLS12"
      sslProtocols:
        - "TLSv1.2"
        - "TLSv1.3"